#version 430 core

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, r32f) uniform image2D img_input;
layout (binding = 1, r32f) uniform image2D img_output;

void main() {
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
    vec2 TexCoords = vec2(pixel_coords) / vec2(imageSize(img_output));

    vec2 texelSize = 1.0 / vec2(imageSize(img_input));
    float result = 0.0;
    for (int x = -2; x < 2; ++x) {
        for (int y = -2; y < 2; ++y) {
            vec2 offset = vec2(float(x), float(y)) * texelSize;
            result += imageLoad(img_input, pixel_coords + ivec2(x, y)).r;
        }
    }
    result /= (4.0 * 4.0);

    imageStore(img_output, pixel_coords, vec4(result, result, result, 1.0));
}
